name: Release CLI

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'

jobs:
  create-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true
    - id: bump
      name: Determine Version
      uses: zwaldowski/match-label-action@v4
      with:
        allowed: major,minor,patch
        default_match: minor
    - uses: zwaldowski/semver-release-action@v3
      name: Bump Version
      id: get_version
      with:
        dry_run: true
        bump: ${{ steps.bump.outputs.match }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        release_name: Release v${{ steps.get_version.outputs.version }}
        draft: false
        prerelease: false

  release-js-cli:
    runs-on: ubuntu-latest
    needs:
      - create-version
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Install dependencies
      run: npm install
    - run: mkdir -p dist
    - name: Pack the CLI with @vercel/ncc
      run: npx @vercel/ncc build ./cli/qkube -o ./dist/js
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./dist/js/index.js
        asset_name: qkube-v${{ needs.create-version.outputs.version }}.js
        asset_content_type: application/javascript

  release-npm:
    runs-on: ubuntu-latest
    needs:
      - create-version
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Install dependencies
      run: npm ci
    - name: Update package.json version
      run: |
        content=$(cat package.json)
        updated_content=$(echo "$content" | jq --arg new_version "${{ needs.create-version.outputs.version }}" '.version = $new_version')
        echo "$updated_content" > package.json
    - name: Login to NPM
      run: npm set //registry.npmjs.org/:_authToken ${{ secrets.NPM_PUBLISH_TOKEN }}
    - name: Publish
      uses: nick-fields/retry@v3
      with:
        max_attempts: 3
        timeout_minutes: 5
        command: |
          set -o pipefail
          npm pack
          npm publish --access public --verbose
